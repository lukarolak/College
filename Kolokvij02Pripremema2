#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */
//PRVI
int ZZ(char a[], int lenA, char b[], int lenB){
	if (sizeof(a) / sizeof(char) < 2 || sizeof(b) / sizeof(char) < 2) //prvi dio zadatka
		return 1;
	else
	{
		char temp = a[lenA - 1]; //zamjena zadnjih znamenki
		a[lenA - 1] = b[lenB - 1];
		b[lenB - 1] = temp;
		
		temp = a[0]; //zamjena prvih znamenki
		a[0] = b[0];
		b[0] = temp;
		
		printf("%s\n", a);
		printf("%s\n", b);
		return 0;
	}
}

void PRVI(){
	char ch = 'a'; int j = 0; //Upis char-ova
	char name[999];
	while(ch != '\n')    
    {
        ch = getchar();
        name[j] = ch;
        j++;
    }
    j--;
    char UpisA[j];
    int i = 0;
    for(i = 0; i < j; i++){
    	UpisA[i] = name[i];
	}
	//---
	ch = 'a'; int k = 0;
	char nameb[999];
	while(ch != '\n')    
    {
        ch = getchar();
        nameb[k] = ch;
        k++;
    }
    k--;
    char UpisB[j];
    for(i = 0; i < k; i++){
    	UpisB[i] = nameb[i];
	}
	
	printf("%d",ZZ(UpisA,j,UpisB,k));
}
//DRUGI

int BrojRijeci(char a[], int len){
	int brojac = 0;
	int i = 0;
	for (i = 0; i < len; i++){
		if (a[i] == ' ')
			brojac++;
	}
	return brojac;
}
int BrojSamoglasnika(char a[], int len){
	int brojac = 0;
	int i = 0;
	for (i = 0; i < len; i++){
		if (a[i] != 'a' || a[i] != 'e' || a[i] != 'i' || a[i] != 'o' || a[i] != 'u')
			brojac++;
	}
	return brojac;
}
void DRUGI(){
	char upis[1000];
	char ch = 'a';
	int i = 0;
	while (ch != '\n')    // terminates if user hit enter
	{
		if (i == 999)
			break;
		ch = getchar();
		upis[i] = ch;
		i++;
	}
	printf("%d %d", BrojRijeci(upis,i), BrojSamoglasnika(upis,i));
	int j = 0;
	for(j = 0; j < i; j++){
		if(upis[j] == 'n')
			printf("NN");
		else
			printf("%c", upis[j]);
	}
	getch();
}

//TRECI
int ZbrojiParne(int Array[],int Zbroj[],int len){
	int brojac = 0; int ArrayPos = 0; int Suma = 0;
	const K = len;
	int i = 0;
	for(i = 0; i < K; i++){
		int j = 0;
		for(j = 0; j < K; j++){
			if(i%2==0 && j%2==0){
				Zbroj[brojac]=Array[ArrayPos];
				printf("%d ",Zbroj[brojac]);
				brojac++;
			}else if(i%2!=0 && j%2!=0){
				Suma += Array[ArrayPos];
			}
			ArrayPos++;
		}
	}
	printf("\n");
	return Suma;
}

void TRECI(){
	int N = 0;
	scanf("%d", &N);
	const K = N;
	int Array[K][K], Zbroj[K][K];
	int i = 0;
	for(i = 0; i < K; i++){
		int j = 0;
		for(j = 0; j < K; j++){
			scanf("%d",&Array[i][j]);
			//Array[i][j] = rand()%10; //automatski upis
			printf("%d ",Array[j][i]);
		}
		printf("\n");
	}
	printf("%d",ZbrojiParne(Array[0],Zbroj[0],K));
}

//CETVRTI
struct Student{
		char Ime[100];
		int OcjA;
		int OcjB;
		int OcjC;
		int OcjD;
	};
int q = 0;
void CETVRTI(){
	
	struct Student Studenti[3];
	FILE *fp;
	char c;
	int n = 0; int brojac = 0; int flag = 0; int brocj = 0;
	char ime[100];
	fp = fopen("c:\\temp\\ocjene.txt", "r");
	if (fp == NULL) {
		perror("Error in opening file");
		return;
	} do {
	//printf("%s",Studenti[0].Ime);
		c = fgetc(fp);
		if (feof(fp)) {
			break;
		}
		//printf("%c",c);
		if(c != ','){
		if(flag == 0){
		if(c != '0' && c != '1' && c != '2' && c != '3' && c != '4' && c != '5'){
			ime[brojac] = c;
			brojac++;
		}else {
			printf("dodao ime\n");
			strcpy(Studenti[q].Ime,ime);
			printf("%s\n",Studenti[q].Ime);
			brojac = 0;
			int i = 0;
			for(i = 0; i < 100;i++){
				ime[i] = 0;
			}
			flag = 1;
		}
		}
		if(flag = 1){
		if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || c == '5'){
				printf("dodao broj\n");
				if(brocj == 0){
					Studenti[0].OcjA = c-'0';
					printf("%d",Studenti[q].OcjA);
				}
				else if(brocj == 1){
					Studenti[q].OcjB = c-'0';
					printf("%d",Studenti[q].OcjB);
				}
				else if(brocj == 2){
					Studenti[q].OcjC = c-'0';
					printf("%d",Studenti[q].OcjC);
				}
				else {
					Studenti[q].OcjD = c-'0';
					printf("%d",Studenti[q].OcjD);
				}
				brocj++;
		}else{
			brocj = 0;
			q++;
			flag = 0;
		}	
		}
		}
	} while (1);
	fclose(fp);
	
	printf("izasao");
	getch();
	
}

int main() {
	//PRVI();
	//DRUGI();
	//TRECI();
	//CETVRTI();
	return 0;
}
